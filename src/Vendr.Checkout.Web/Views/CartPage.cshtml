@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.CartPage>
@using ContentModels = Umbraco.Web.PublishedModels;
@{ Layout = "master.cshtml"; }

@Html.Partial("~/Views/Partials/SectionHeader.cshtml")

<section class="section">

    <div class="container">

        <div class="col-md-12">

            @if (Model != null && Model.Order != null && Model.Order.OrderLines.Count > 0)
            {
                using (Html.BeginUmbracoForm("UpdateCart", "CartSurface", FormMethod.Post, new { @class = "theme-light" }))
                {
                    @Html.AntiForgeryToken();
                    @Html.ValidationSummary();
                    var counter = 0;

                    <table class="table">
                        <thead>
                            <tr>
                                <th style="width:45%; border: none">@Umbraco.GetDictionaryValue("Orders.ProductLabel")</th>
                                <th style="width:10%; border: none">@Umbraco.GetDictionaryValue("Orders.PriceLabel")</th>
                                <th style="width:10%; border: none">@Umbraco.GetDictionaryValue("Orders.QuantityLabel")</th>
                                <th style="width:10%; border: none">@Umbraco.GetDictionaryValue("Orders.TotalLabel")</th>
                                <th style="width:5%; border: none"></th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in Model.Order.OrderLines.Select((value, index) => new { index, value }))
                            {
                                Product product = null;
                                if (Guid.TryParse(item.value.ProductReference, out Guid prodRef))
                                {
                                    product = Vendr.Checkout.Web.Extensions.PublishedContentExtensions.GetProduct(Model, prodRef);
                                }

                                <tr scope="row" style="@(item.index % 2 == 0 ? "background-color: #FFFFFF" : "background-color: rgba(0,0,0,.05)")">
                                    <td>
                                        <div class="row">
                                            <div class="col-2 d-none d-xl-block">
                                                @if (product.FindImage() != null)
                                                {
                                                    <picture>
                                                        <source class="product-image-cart float-left img-fluid"
                                                                srcset="@product.FindImage().GetCropUrlWithFormat(Enums.Media.WebP)"
                                                                type="image/webp"
                                                                alt="@product.FindImage().GetAltText()"
                                                                style="width:100px;">
                                                        <img loading="lazy"
                                                             class="product-image-cart float-left img-fluid"
                                                             src="@product.FindImage().GetCropUrlWithFormat()"
                                                             alt="@product.FindImage().GetAltText()"
                                                             style="width:100px;">
                                                    </picture>
                                                }
                                            </div>
                                            <div class="col-10">
                                                <a class="font-weight-bold text-primary" href="@product.Url()">@item.value.Name</a>
                                                <span class="d-block small">@item.value.Sku</span>

                                                @if (product.IsBundle)
                                                {
                                                    <div class="mt-3">
                                                        @foreach (var bundledProduct in product.BundledProducts)
                                                        {
                                                            <div class="row pt-2">
                                                                <div class="col-3 d-none d-xl-block">
                                                                    @if (bundledProduct.FindImage() != null)
                                                                    {
                                                                        <picture>
                                                                            <source class="product-image-cart float-left"
                                                                                    srcset="@bundledProduct.FindImage().GetCropUrlWithFormat(Enums.CropAlias.NoCrop, Enums.Media.WebP)"
                                                                                    type="image/webp" alt="@bundledProduct.FindImage().GetAltText()">
                                                                            <img loading="lazy" class="product-image-cart float-left"
                                                                                 src="@bundledProduct.FindImage().GetCropUrlWithFormat(Enums.CropAlias.NoCrop)"
                                                                                 alt="@bundledProduct.FindImage().GetAltText()">
                                                                        </picture>
                                                                    }
                                                                </div>
                                                                <div class="col-9">
                                                                    <a class="font-weight-light small text-primary" href="@bundledProduct.Url()">@bundledProduct.FindTitle()</a>
                                                                </div>
                                                            </div>
                                                        }

                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </td>
                                    <td data-label="Price">
                                        @if (product.PreviousPrice > 0)
                                        {
                                            <del>@product.PreviousPrice.ToString("C")</del>
                                        }

                                        @(item.value.UnitPrice.Value.Formatted())
                                    </td>
                                    <td data-label="Quantity">
                                        @Html.Hidden($"orderLines[{item.index}].Id", item.value.Id)
                                        @Html.TextBox($"orderLines[{item.index}].Quantity", (int)item.value.Quantity, new
                                            {
                                                @type = "number",
                                                @class = "form-control w-100 center",
                                                min = 0,
                                                max = 10
                                            })
                                    </td>
                                    <td data-label="Total">@(item.value.TotalPrice.Value.Formatted())</td>
                                    <td>
                                        <a href="@Url.SurfaceAction("RemoveFromCart", "CartSurface", new { OrderLineId = item.value.Id})" class="btn btn-tertiary remove-button"
                                           data-method="RemoveFromCart"
                                           data-pagetype="@Umbraco.AssignedContentItem.ContentType.Alias"
                                           data-currency="@Umbraco.AssignedContentItem.GetCurrency()"
                                           data-products='@Html.Raw(product.DataLayerModelJson(item.index, "Cart"))'
                                           data-list="Cart Listing">
                                            @Umbraco.GetDictionaryValue("Orders.RemoveLabel")
                                        </a>
                                    </td>
                                </tr>


                                counter++;
                            }

                        </tbody>
                        <tfoot>
                            <tr scope="row" style="background-color: #FFFFFF;">
                                <td colspan="1" class="small">@Umbraco.GetDictionaryValue("Orders.ShippingCalculatedAtCheckoutLabel")</td>
                                <td colspan="2"><strong>@Umbraco.GetDictionaryValue("Orders.SubTotalLabel")</strong></td>
                                <td colspan="2"><strong>@(Model.Order.SubtotalPrice.Value.Formatted())</strong></td>
                            </tr>

                            <tr scope="row" class="update-cart mb-5">
                                <td colspan="12">
                                    <div class="mt-33">
                                        <button id="update-button" class="btn btn-warning" title="@Umbraco.GetDictionaryValue("Orders.RefreshLabel")"><i class="fa fa-refresh"></i> @Umbraco.GetDictionaryValue("Orders.UpdateLabel")</button>
                                        <a href="@(Model.CheckoutPage.Url)" class="btn btn-tertiary checkout-button">@Umbraco.GetDictionaryValue("Orders.CheckoutLabel")</a>
                                    </div>
                                </td>
                            </tr>

                        </tfoot>
                    </table>
                }
            }
            else
            {
                <div class="alert alert-light-gray center">
                    @Umbraco.GetDictionaryValue("Orders.YourCartIsEmptyLabel")
                </div>
            }
        </div>
    </div>

</section>
